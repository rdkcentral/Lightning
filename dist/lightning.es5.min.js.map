{"version":3,"file":"lightning.es5.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mts","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        if (item._reversed && item._recalc == 0) {\n            item._reversed = false;\n        }\n        if (!item._reversed) {\n            const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n            const reversedPos = this._layout.mainAxisSize - endPos;\n            item.flexItem._setMainAxisLayoutPos(reversedPos);\n            if (item._recalc != 0) {\n                item._reversed = true;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n        this._reversed = false;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n\n        /**\n         * Track whether or not there is an alpha channel in this source\n         * @type {boolean}\n         * @private\n         */\n         this._hasAlpha = false;\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        \n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px;\n        if (window.isRTL) {\n            px = this._x + (pivotXMul * this._localTa + pivotYMul * this._localTb) - pivotXMul;\n        } else {\n            px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        }\n\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                let calculatedX = this._localPx;\n                if (window.isRTL) {\n                    const parentW = this._element.__parent ? this._parent.w || 0 : this.ctx.stage.getOption('w');\n                    calculatedX = parentW - (this._w || 0) - this._localPx;\n                }\n\n                w.px = pw.px + calculatedX * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += calculatedX * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    let calculatedX = this._localPx;\n                    if (window.isRTL) {\n                      const parentW = this._element.__parent\n                        ? this._parent.w || 0\n                        : this.ctx.stage.getOption(\"w\");\n                      calculatedX = parentW - (this._w || 0) - this._localPx;\n                    }\n                    \n                    r.px = pr.px + calculatedX * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += calculatedX * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\n                    this.ctx.renderToTextureCount++;\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                a.splice(n); // Remove items that were sorted in b array, so that we can sort a\n+               // Beware that the function passed here to Array.sort must be stable\n+               a.sort(ElementCore.sortZIndexedChildren); // Needed because items with same _zIndex may not be ordered by _updateTreeOrder\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n\n                // free up unused TextTextures immediately as they are not reused anyway\n                if(this['text'] && !oldSource.isUsed()) {\n                    this.manager.freeTextureSource(oldSource);\n                }\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns CSS font setting string for use in canvas context.\n *\n * @param fontFace\n * @param fontStyle\n * @param fontSize\n * @param precision\n * @param defaultFontFace\n * @returns\n */\nexport function getFontSetting(\n    fontFace: string | string[],\n    fontStyle: string,\n    fontSize: number,\n    precision: number,\n    defaultFontFace: string\n): string {\n    let ff = fontFace;\n\n    if (!Array.isArray(ff)) {\n        ff = [ff];\n    }\n\n    let ffs = [];\n    for (let i = 0, n = ff.length; i < n; i++) {\n        let curFf = ff[i];\n        // Replace the default font face `null` with the actual default font face set\n        // on the stage.\n        if (curFf === null) {\n            curFf = defaultFontFace;\n        }\n        if (curFf === \"serif\" || curFf === \"sans-serif\") {\n            ffs.push(curFf);\n        } else {\n            ffs.push(`\"${curFf}\"`);\n        }\n    }\n\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\n}\n\n/**\n * Returns true if the given character is a zero-width space.\n *\n * @param space\n */\nexport function isZeroWidthSpace(space: string): boolean {\n    return space === '' || space === '\\u200B';\n}\n\n/**\n * Returns true if the given character is a zero-width space or a regular space.\n *\n * @param space\n */\nexport function isSpace(space: string): boolean {\n    return isZeroWidthSpace(space) || space === ' ';\n}\n\n/**\n * Converts a string into an array of tokens and the words between them.\n *\n * @param tokenRegex\n * @param text\n */\nexport function tokenizeString(tokenRegex: RegExp, text: string): string[] {\n    const delimeters = text.match(tokenRegex) || [];\n    const words = text.split(tokenRegex) || [];\n\n    let final: string[] = [];\n    for (let i = 0; i < words.length; i++) {\n        final.push(words[i]!, delimeters[i]!)\n    }\n    final.pop()\n    return final.filter((word) => word != '');\n}\n\n/**\n * Measure the width of a string accounting for letter spacing.\n *\n * @param context\n * @param word\n * @param space\n */\nexport function measureText(context: CanvasRenderingContext2D, word: string, space: number = 0): number {\n    if (!space) {\n        return context.measureText(word).width;\n    }\n    return word.split('').reduce((acc, char) => {\n        // Zero-width spaces should not include letter spacing.\n        // And since we know the width of a zero-width space is 0, we can skip\n        // measuring it.\n        if (isZeroWidthSpace(char)) {\n            return acc;\n        }\n        return acc + context.measureText(char).width + space;\n    }, 0);\n}\n\nexport interface WrapTextResult {\n    l: string[];\n    n: number[];\n}\n\n/**\n * Applies newlines to a string to have it optimally fit into the horizontal\n * bounds set by the Text object's wordWrapWidth property.\n *\n * @param context\n * @param text\n * @param wordWrapWidth\n * @param letterSpacing\n * @param indent\n */\nexport function wrapText(\n    context: CanvasRenderingContext2D,\n    text: string,\n    wordWrapWidth: number,\n    letterSpacing: number,\n    indent: number\n): WrapTextResult {\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\n    // than its horizontal bounds.\n    const spaceRegex = / |\\u200B/g;\n    let lines = text.split(/\\r?\\n/g);\n    let allLines: string[] = [];\n    let realNewlines: number[] = [];\n    for (let i = 0; i < lines.length; i++) {\n        let resultLines: string[] = [];\n        let result = '';\n        let spaceLeft = wordWrapWidth - indent;\n        let words = lines[i]!.split(spaceRegex);\n        let spaces = lines[i]!.match(spaceRegex) || [];\n        for (let j = 0; j < words.length; j++) {\n            const space = spaces[j - 1] || '';\n            const word = words[j]!;\n            const wordWidth = measureText(context, word, letterSpacing);\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                // Skip printing the newline if it's the first word of the line that is.\n                // greater than the word wrap width.\n                if (j > 0) {\n                    resultLines.push(result);\n                    result = '';\n                }\n                result += word;\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n            }\n            else {\n                spaceLeft -= wordWidthWithSpace;\n                result += space + word;\n            }\n        }\n\n        resultLines.push(result);\n        result = '';\n\n        allLines = allLines.concat(resultLines);\n\n        if (i < lines.length - 1) {\n            realNewlines.push(allLines.length);\n        }\n    }\n\n    return {l: allLines, n: realNewlines};\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, measureText, wrapText } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n            this._settings.fontWeight,\n        );\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace'),\n                this._settings.fontWeight,\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || this._stage.getOption('w');\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth = 10;\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n        if (window.isRTL) {\n            this._context.direction = 'rtl';\n            this._context.textAlign = 'left';\n        }\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * See {@link wrapText}\n     *\n     * @param {string} text\n     * @param {number} wordWrapWidth\n     * @param {number} letterSpacing\n     * @param {number} indent\n     * @returns\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        return wrapText(this._context, text, wordWrapWidth, letterSpacing, indent);\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, isSpace, measureText, tokenizeString } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n            this._settings.fontWeight,\n        );\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace'),\n                this._settings.fontWeight,\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (isSpace(lastWord) || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\n            for (const s of suffix) {\n                s.lineNo = index;\n                s.x = 0;\n                lastLineText.push(s)\n            }\n\n            const spl = suffix.length + 1\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\n                lastLineText.splice(lastLineText.length - spl, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                if (lastLineText.length < spl) {\n                    break;\n                }\n            }\n            this.alignLine(lastLineText, lastLineText[0].x)\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n    tokenize(text) {\n        return tokenizeString(/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g, text);\n    }\n\n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n\n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n\n    alignLine(parsed, initialX = 0) {\n        let prevWidth = 0;\n        let prevX = initialX;\n        for (const word of parsed) {\n            if (word.text == '\\n') {\n                continue;\n            }\n            word.x = prevX + prevWidth;\n            prevX = word.x;\n            prevWidth = word.width;\n        }\n\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontWeight() {\n        return this._fontWeight;\n    }\n\n    set fontWeight(v) {\n        if (this._fontWeight !== v) {\n            this._fontWeight = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (v != 'center' && window.isRTL) {\n            v = v == \"right\" ? \"left\" : \"right\";\n        }\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontWeight !== 'normal') parts.push(\"fw\" + this.fontWeight);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontWeight !== \"normal\") nonDefaults[\"fontWeight\"] = this.fontWeight;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontWeight = this._fontWeight;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontWeight = \"normal\";\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if( index < this._items.length){\n\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n\n                    const prevItem = this._items[index];\n\n                    // Doesn't exist yet: overwrite current.\n                    this._items[index] = item;\n\n                    if (item.ref) {\n                        this._refs[item.ref] = item;\n                    }\n\n                    this.onSet(item, index, prevItem);\n                } else {\n                    throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n                }\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.stage.removeUpdateSourceTexture(this.__displayedTexture)\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOffscreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n        this.ctx = null;\n        this.renderState = null;\n        this.gl = null;\n\n        delete this.ctx;\n        delete this.renderState;\n        delete this.gl;\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n\n        this.gl = null;\n        delete this.gl;\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n        this.gl = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n        }\n\n        this._attributeLocations = null;\n        this._currentUniformValues = null;\n        this.fragmentShaderSource = null;\n        this._program = null;\n        this.gl = null;\n        this._uniformLocations = null;\n        this.vertexShaderSource = null;  \n\n        delete this.vertexShaderSource;\n        delete this._program;        \n        delete this._currentUniformValues;\n        delete this.fragmentShaderSource;\n        delete this.gl;\n        delete this._uniformLocations;\n        delete this._attributeLocations;\n\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            \n            gl.bindTexture(gl.TEXTURE_2D, glTexture);\n            gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n        this._compressedTextureExtensions = {\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\n        }\n    }\n\n    getCompressedTextureExtensions() {\n        return this._compressedTextureExtensions\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n\n        this.shaderPrograms = null;\n        this._compressedTextureExtensions = null;\n\n        delete this.shaderPrograms;\n        delete this._compressedTextureExtensions;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n\n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n\n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    _getBytesPerPixel(fmt, type) {\n        const gl = this.stage.gl;\n\n        if (fmt === gl.RGBA) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 4;\n\n                case gl.UNSIGNED_SHORT_4_4_4_4:\n                    return 2;\n\n                case gl.UNSIGNED_SHORT_5_5_5_1:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGBA format');\n            }\n        }\n        else if (fmt === gl.RGB) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 3;\n\n                case gl.UNSIGNED_BYTE_5_6_5:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGB format');\n            }\n        }\n        else {\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\n        }\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n        let compressed = false;\n        if (options.renderInfo) {\n            compressed = options.renderInfo.compressed || false\n        }\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        if (compressed) {\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\n            return glTexture;\n        }\n         \n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n        \n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n        \n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        // calculate bytes per pixel for vram usage tracking\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n\n        this.tintManager = null;\n        delete this.tintManager;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n\n        this._items = null;\n        this._worker = null;\n\n        delete this._items;\n        delete this._worker;        \n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n\n        clearInterval(this._loopHandler);\n\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function () {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.renderFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\n        gl.compressedTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            source.glInternalFormat,\n            source.pixelWidth,\n            source.pixelHeight,\n            0,\n            view,\n        )\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else if (source.width > 0 && source.height > 0) {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    /**\n     * KTX File format specification\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n     **/\n    handleKtxLoad(cb, src) {\n        var self = this;\n        return function () {\n            var arraybuffer = this.response;\n            var view = new DataView(arraybuffer);\n\n            // identifier, big endian\n            var targetIdentifier = 3632701469\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\n                cb('Parsing failed: identifier ktx mismatch:', src)\n            }\n\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\n            var data = {\n                glType: view.getUint32(16, littleEndian),\n                glTypeSize: view.getUint32(20, littleEndian),\n                glFormat: view.getUint32(24, littleEndian),\n                glInternalFormat: view.getUint32(28, littleEndian),\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\n                pixelWidth: view.getUint32(36, littleEndian),\n                pixelHeight: view.getUint32(40, littleEndian),\n                pixelDepth: view.getUint32(44, littleEndian),\n                numberOfArrayElements: view.getUint32(48, littleEndian),\n                numberOfFaces: view.getUint32(52, littleEndian),\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\n                kvps: [],\n                mipmaps: [],\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            const props = (obj) => {\n                const p = [];\n                for (let v in obj) {\n                    p.push(obj[v]);\n                }\n                return p;\n            }\n\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\n                .filter((obj) => obj != null)\n                .map((obj) => props(obj))\n                .reduce((prev, current) => prev.concat(current));\n\n            if (!formats.includes(data.glInternalFormat)) {\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\n            }\n\n            var offset = 64\n            // Key Value Pairs of data start at byte offset 64\n            // But the only known kvp is the API version, so skipping parsing.\n            offset += data.bytesOfKeyValueData;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                var imageSize = view.getUint32(offset);\n                offset += 4;\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\n                offset += imageSize\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    handlePvrLoad(cb, src) {\n        return function () {\n            // pvr header length in 32 bits\n            const pvrHeaderLength = 13;\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n            const pvrFormatEtc1 = 0x8D64;\n            const pvrWidth = 7;\n            const pvrHeight = 6;\n            const pvrMipmapCount = 11;\n            const pvrMetadata = 12;\n            const arrayBuffer = this.response;\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n            const dataOffset = header[pvrMetadata] + 52;\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n\n            var data = {\n                glInternalFormat: pvrFormatEtc1,\n                pixelWidth: header[pvrWidth],\n                pixelHeight: header[pvrHeight],\n                numberOfMipmapLevels: header[pvrMipmapCount],\n                mipmaps: [],\n                pvr: true,\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            let offset = 0\n            let width = data.pixelWidth;\n            let height = data.pixelHeight;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n                data.mipmaps.push(view);\n                offset += level;\n                width = width >> 1;\n                height = height >> 1;\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    loadSrcTexture({ src, hasAlpha }, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.toLowerCase().indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        let isKtx = src.indexOf('.ktx') >= 0 || src.indexOf('type=etc') >= 0;\n        let isPvr = src.indexOf('.pvr') >= 0;\n        if (isKtx || isPvr) {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\n            );\n            request.open(\"GET\", src);\n            request.responseType = \"arraybuffer\";\n            request.send();\n            cancelCb = function () {\n                request.abort();\n            }\n        } else if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function (err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function () {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function (err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function () {\n                cb(null, {\n                    source: image,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function () {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts) || canvas.getContext('webgl2', opts);\n\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.renderFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\nimport Stage from './Stage.mjs';\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n\n        // add VRAM tracking if using the webgl renderer\n        this._updateVramUsage(textureSource, 1);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    _updateVramUsage(textureSource, sign) {\n        const nativeTexture = textureSource.nativeTexture;\n        var usage;\n\n        // do nothing if webgl isn't even supported\n        if (!Stage.isWebglSupported())\n            return;\n\n        // or if there is no native texture\n        if (!textureSource.isLoaded())\n            return;\n\n        // or, finally, if there is no bytes per pixel specified\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\n            return;\n\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\n\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\n    }\n\n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n\n            // add VRAM tracking if using the webgl renderer\n            this._updateVramUsage(textureSource, -1);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n        this.stage = null;\n\n        delete this._sources;\n        delete this._data;\n        delete this.stage;\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n\n        this.renderToTextureCount = 0;\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n\n        this.stage = null;\n        this.root = null;\n\n        this.renderState = null;\n        this.renderExec = null;\n        this._renderTexturePool = null;\n        this._zSorts = null;\n\n        delete this.stage;\n        delete this.root;\n        delete this.renderState;\n        delete this.renderExec;\n        delete this._renderTexturePool;\n        delete this._zSorts;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        const debugFrame = this.stage.getOption('debugFrame');\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        if (debugFrame) {\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\n        }\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw') &&\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\n        ) {\n            if (debugFrame) {\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\n            }\n            this._readPixels();\n        }\n\n        this.renderToTextureCount = 0;\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        // attempt to track VRAM usage more accurately by accounting for different color channels\n        this._usedVramAlpha = 0;\n        this._usedVramNonAlpha = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            if (this.getOption('devicePixelRatio') !== 1) {\n                const ratio = this.getOption('devicePixelRatio');\n                // set correct display sie\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\n            }\n\n            // set display buffer size\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('devicePixelRatio', 1)       \n        opt('readPixelsAfterDraw', false);\n        opt('readPixelsAfterDrawThreshold', 0);\n        opt('debugFrame', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n        opt('RTL', false);\n\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\n            this._options['precision'] *= o['devicePixelRatio']\n            this._options['w'] *= o['devicePixelRatio']\n            this._options['h'] *= o['devicePixelRatio']\n        }\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n\n        // clear last rendered frame\n        if (this.gl) {\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        } else if (this.c2d) {\n            this.c2d.clearRect(\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\n            );\n        }\n\n        this.gl = null;\n        this.c2d = null;\n        this.ctx = null;\n        this._options = null;\n        this.platform = null;\n        this.textureManager = null;\n        this._renderer = null;\n\n        delete this.gl;\n        delete this.c2d;\n        delete this.ctx;\n        delete this._options;\n        delete this.platform;\n        delete this.textureManager;\n        delete this._renderer;\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    renderFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    drawFrame() {\n        // Maintain original functionality of `drawFrame()` while retaining the\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\n        // The full functionality of this method is relied directly by our own unit tests and\n        // the unit tests of third party users\n        this.updateFrame();\n        this.renderFrame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    addVramUsage(delta, alpha) {\n        if (alpha) {\n            this._usedVramAlpha += delta;\n        }\n        else {\n            this._usedVramNonAlpha += delta;\n        }\n    }\n\n    get usedVramAlpha() {\n        return this._usedVramAlpha;\n    }\n\n    get usedVramNonAlpha() {\n        return this._usedVramNonAlpha;\n    }\n\n    get usedVram() {\n        return this._usedVramAlpha + this._usedVramNonAlpha;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y) {\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x, y, children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while (true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while (n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                const { px, py } = child.core._worldContext;\n                const cx = px * precision;\n                const cy = py * precision;\n\n                const localCoords = {\n                    x: clientX - cx,\n                    y: clientY - cy\n                }\n\n                const returnValue = child._handleClick(target, localCoords);\n                if (returnValue !== false) {\n                    break;\n                }\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a, b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1 : -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onerror = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b) * vColor;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n"],"names":["StageUtils","value","mergeNumbers","v1","v2","p","rgb","r","g","b","rgba","a","getRgbString","color","getRgbaString","toFixed","getRgbaStringFromArray","Math","floor","getRgbaComponentsNormalized","argb","getRgbComponentsNormalized","getRgbaComponents","getArgbNumber","max","min","v","mergeColors","c1","c2","r1","round","c","t","n","length","i","g1","b1","a1","mergeMultiColorsEqual","alpha","rad","deg","PI","getTimingBezier","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","getTimingFunction","str","s","indexOf","parts","substr","split","warn","parseFloat","isNaN","Utils","isFunction","isNumber","isInteger","isBoolean","isString","clone","isObjectLiteral","Array","isArray","getDeepClone","cloneObjShallow","obj","keys","Object","obj1","obj2","isObject","type","isPlainObject","constructor","index","arr","getModuloIndex","len","ceil","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","equalValues","this","setToArray","result","forEach","push","iteratorToArray","iterator","iteratorResult","next","done","isUcChar","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","Utils$1","isNode","isPS4","isZiggo","Base","defaultSetter","name","settings","names","patchObjectProperty","console","error","setter","setSetting","charAt","__local","local","func","SpacingCalculator","getSpacing","mode","numberOfItems","remainingSpace","spacePerGap","spacingBefore","spacingBetween","itemGaps","Error","ContentAligner","layout","_classCallCheck","_layout","_totalCrossAxisSize","get","_lines","init","_getTotalCrossAxisSize","align","crossAxisSize","_this$_getSpacing","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","recursiveResizeOccured","setItemPositions","total","FlexUtils","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","funcW","_allowRelAxisSizeFunction","getParentAxisSizeWithPadding","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","x","y","setAxisLayoutPos","pos","setAxisLayoutSize","size","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","getAxisMinSize","flexItem","shrink","getRelAxisSize","resizeAxis","_horizontal","resizeMainAxis","resizeCrossAxis","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","marginLeft","marginTop","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","getShrunkSize","SizeGrower","_grownSize","grow","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","maxSize","_getMainAxisMaxSizeSetting","maxGrow","getGrownSize","ItemPositioner","lineLayout","position","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","performLayout","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","shrinker","_calcCrossAxisMaxLayoutSize","getMainAxisMinSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","_getCrossAxisMinSize","layoutLines","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","resizingMainAxis","isMainAxisFitToContents","crossAxisMinSize","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","finalize","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","getAxisLayoutPos","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","_reversed","_recalc","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","layoutTree","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","mainAxisContentSize","totalCrossAxisSize","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","isZeroAxisSize","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","ctr","getPaddingOffset","set","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_changedDimensions","changedDimensions","_changedContents","changedContents","f","direction","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","patch","patchObject","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","_getCrossAxisLayoutSize","_getMainAxisPadding","_getMainAxisMargin","getTotalMargin","getMarginOffset","FlexTarget","_target","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","layoutFlexTree","isChanged","_enableFlex","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","from","to","isFlexContainer","_changedChildren","setVisible","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","changeHeight","_updateRecalc","forceLayout","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","combinedRecalc","shrunk","setOriginalXWithoutUpdatingLayout","setOriginalYWithoutUpdatingLayout","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","_hasAlpha","addTexture","has","add","removeTexture","delete","incActiveTextureCount","becomesUsed","decActiveTextureCount","becomesUnused","forEachEnabledElement","cb","_this","texture","_newArrowCheck","elements","bind","hasEnabledElements","forEachActiveElement","_this2","_this3","element","active","getRenderWidth","getRenderHeight","allowCleanup","isUsed","load","cancel","isLoading","isLoaded","isError","reload","free","_this4","forceSync","isResultTexture","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","hasAlpha","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","_this5","forceRenderUpdate","update","frameCounter","forceUpdateRenderCoords","_updateTextureCoords","clearNativeTexture","replaceNativeTexture","newNativeTexture","_this6","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","_updateDimensions","e","_this7","onTextureSourceLoadError","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","setHasRenderUpdates","_setRecalc","_getTextureSource","textureManager","updateResultTexture","hasResultTexture","resultTextureInUse","resultTexture","getResultTexture","nativeTexture","core","mustRenderToTexture","_hasRenderUpdates","deactivate","release","releaseRenderTexture","reuseTextureAsRenderTexture","hasRenderTexture","getRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","hasFlexLayout","_disableFuncX","_updateLocalTranslateDelta","_triggerRecalcTranslate","_disableFuncY","disableFuncW","disableFuncH","_updateLocalTransform","scaleX","_updateLocalTranslate","prev","_updateLocalAlpha","_updateEnabledFlag","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","px","pivotYMul","isRTL","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","setParent","prevIsZContext","isZContext","prevParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","child","splice","removeChildAt","removeChildren","syncChildren","removed","added","order","fromIndex","toIndex","isEstimate","arguments","setTextureCoords","ulx","uly","brx","bry","setDisplayedTextureSource","textureSource","setAsRoot","root","coordsWidth","coordsHeight","isAncestorOf","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","prevZContext","_getZIndexedDescs","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","prevShader","shader","defaultShader","_setShaderOwnerChildrenRecursive","_hasRenderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_renderAdvanced","isWhite","hasSimpleTexCoords","_stashTexCoords","_stashedTexCoords","_unstashTexCoords","_stashColors","_stashedColors","_unstashColors","isVisible","_applyRelativeDimFuncs","pw","calculatedX","__parent","getOption","ta","td","tb","tc","pr","updateTreeOrder","useRenderToTexture","sx","sy","ex","ey","bboxW","bboxH","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","renderOffscreen","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","activeShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","renderToTextureCount","cleared","ignore","cache","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","renderTextureReused","setTexturizer","colorize","ptr","m","j","sort","mergeResult","getCornerPoints","relX","relY","collectAtCoord","inBound","inScissor","tx","ty","sc","_ensureLayout","EventEmitter","_hasEventListeners","listener","_eventFunction","_eventListeners","combiner","wrapper","arg1","arg2","arg3","off","__originalFunc","on","current","listeners","_step","_iterator","_createForOfIteratorHelper","l","map","emit","listenerCount","removeAllListeners","object","_i","_arr","_toConsumableArray","addAsMixin","cls","once","removeListener","Shader","coreContext","_initialized","_elements","addElement","removeElement","cleanup","redraw","useDefault","addEmpty","renderer","createShader","isShader","isValidShaderType","getWebGL","getC2d","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","clipping","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","incActiveCount","decActiveCount","_checkForNewerReusableTextureSource","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","_getLookupId","_getSourceLoader","_getIsValid","_updateSource","addUpdateSourceTexture","getTextureSource","getReusableTextureSource","newSource","oldSource","loadError","_ref","_ref$type","_ref$w","_ref$h","_ref$clipX","clipX","_ref$clipY","clipY","_clearResizeMode","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","scaleY","scale","desiredSize","choppedOffPixels","enableClipping","disableClipping","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","getNonDefaults","nonDefaults","precision","isAutosizeTexture","isTexture","ImageTexture","_super","call","_src","src","fc","charCodeAt","platform","loadSrcTexture","_get","_getPrototypeOf","getFontSetting","fontFace","fontStyle","fontSize","defaultFontFace","ff","ffs","curFf","isZeroWidthSpace","space","isSpace","measureText","context","word","reduce","acc","char","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","getPrecision","setFontProperties","font","fontWeight","textBaseline","_load","document","fonts","fontSetting","check","text","catch","then","draw","loadPromise","drawText","_draw","_calculateRenderInfo","offsetY","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","textAlign","globalAlpha","fillRect","translate","drawLines","verticalAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","spaceRegex","allLines","realNewlines","resultLines","spaceLeft","words","spaces","match","wordWidthWithSpace","concat","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","_step2","_iterator2","_step3","_iterator3","firstWord","lastWord","shift","pop","_step4","_iterator4","lastLineText","filter","_suffix","_step5","_iterator5","spl","alignLine","_step6","_iterator6","_step7","_iterator7","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","_step8","_iterator8","_step9","_iterator9","letters","_step10","_iterator10","tokenizeString","tokenRegex","delimeters","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","parsed","_step11","_iterator11","applyFontStyle","_step12","_iterator12","breakIndex","totalWidth","_step13","_iterator13","_objectSpread","_breakIndex","_this$_getBreakIndex","_getBreakIndex","initialX","_step14","prevWidth","prevX","_iterator14","TextTexture","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontWeight","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","_set","toString","advancedRenderer","args","cloneArgs","gl","getDrawingCanvas","texParams","sharpCfg","sharpen","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","start","targetValue","isAttached","reset","delay","_updateDrawValue","finish","stop","removeActive","pause","play","addActive","getDrawValue","attached","isRunning","progress","dt","delayLeft","duration","invokeListeners","updateTargetValue","timingFunctionImpl","_timingFunctionImpl","startValue","skipDelay","isTransition","ObjectList","_refs","addAt","currentIndex","createItem","setAt","ref","onAdd","replaceByRef","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","getAt","remove","removeAt","onRemove","clear","onSync","isItem","_getRefs","clearRef","_setByObject","_setByArray","refs","crefs","cref","idx","_equalsArray","array","same","marker","newItems","_setItems","prevItems","ElementChildList","_connectParent","prevChildList","childList","_setParent","addChildAt","gc","setChildAt","moveChild","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","_throwError","removeTag","_addTag","setRef","_updateAttachedFlag","isRoot","_unsetTagsParent","_setTagsParent","_updateCollision","getDepth","depth","getAncestor","getAncestors","getAncestorAtDepth","levels","getSharedAncestor","o1","o2","l1","l2","_isAttached","_isEnabled","_isActive","withinBoundsMargin","newAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","_setActiveFlag","_unsetActiveFlag","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","_onInactive","_onResize","_getRenderWidth","_getRenderHeight","textureIsLoaded","loadTexture","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","unknownSize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","ph","tempty","tag","tags","tagSet","_loop","parentTreeTags","comp","Map","_loop2","_getByTag","getTags","setTags","removes","adds","hasTag","currentTags","addTag","list","_tag","mtag","values","res","level","resn","sel","path","select","selectors","_select","pointIdx","isRef","arrowIdx","_selectChilds","subPath","_next","getLocationString","localTags","getSettings","getPrettyString","childArray","missing","pivotX","pivotY","pivot","mountX","mountY","mount","rotation","colorUl","colorUr","colorBl","colorBr","forceZIndexContext","clipbox","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","boundsMargin","offsetX","_collision","collision","_allowChildrenAccess","hasChildren","rectangleTexture","enableTextTexture","onUpdate","onAfterCalcs","onAfterUpdate","forceUpdate","create","rtt","getTexture","paths","firstCharCode","message","animation","animations","createAnimation","transition","_getTransition","_setTransition","setSmooth","fastForward","_transitions","isTransitionSettings","transitions","defaultTransitionSettings","createSettings","_removeTransition","toJSON","tree","collectChildren","getProperties","colorKeys","JSON","stringify","k","childStr","isEmpty","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","isColorProperty","toLowerCase","properties","props","key","StateMachine","setupStateMachine","fire","event","_hasMethod","_len","_key","_getState","_state","__path","_inState","statePath","currentStatePath","state","_sm","getStateByPath","currentState","__level","stateAtLevel","_getStateAtLevel","_hasMember","member","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","apply","_onStateChange","hasParent","_stateIndex","__index","_initStateMachine","_routedType","_getMostSpecificHandledMember","memberNames","cur","memberName","StateMachineType","getStateMemberAlias","targetConstructor","router","setPrototypeOf","stateMachineType","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","_inherits","StateMachineRouter","_createSuper","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","isValid","curState","getPrototypeOf","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","_this8","_this9","stateMap","members","_this10","_getStateMemberNames","_this11","_getStateMemberNamesForType","_this12","_isStateLocalMember","_createStateMap","_addState","parentState","_this13","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","__supportsSpread","Component","tagRoot","_assertThisInitialized","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","_refocus","__bindProperty","propObj","targetObj","targetProp","prop","propDependencies","propName","__func","__obj","__prop","_step$value","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","_focus","newTarget","prevTarget","_focusChange","_getFocused","hasFinalFocus","_focusPath","hasFocus","seekAncestorByType","cparent","getSharedAncestorComponent","ancestor","isComponent","signal","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","fireAncestors","startsWith","_len2","_key2","_doFireAncestors","bindProp","__propertyBinding","hasName","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","subs","collectSubComponents","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","getElement","getElementCore","getTextureWidth","getTextureHeight","WebGLCoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","getAttribsDataByteOffset","getQuadContents","CoreQuadOperation","shaderOwner","scissor","quads","getElementWidth","renderWidth","getElementHeight","renderHeight","WebGLCoreQuadOperation","extraAttribsDataByteOffset","coords","getRenderTextureCoords","getProjection","renderExec","_projection","projection","CoreRenderExecutor","destroy","_reset","_bindRenderTexture","_setScissor","_clearRenderTexture","execute","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","getScissor","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","compile","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniformLocation","location","getAttribLocation","_valueClone","setUniformValue","glFunction","_valueEquals","clonedValue","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","WebGLShader","shaderPrograms","glProgram","initialize","_uniform","_attrib","_setUniform","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getVertexAttribPointerOffset","_getProjection","getFlipY","DefaultShader","vertexAttribPointer","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","DefaultShader$1","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","copyRenderTexture","WebGLRenderer","_compressedTextureExtensions","astc","getExtension","etc1","s3tc","pvrtc","getCompressedTextureExtensions","shaderProgram","createCoreRenderExecutor","createCoreRenderState","createRenderTexture","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","freeRenderTexture","deleteFramebuffer","deleteTexture","fmt","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","RGB","UNSIGNED_BYTE_5_6_5","compressed","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","uploadCompressedGlTexture","uploadGlTexture","bytesPerPixel","_getBytesPerPixel","mca","mergeColorAlpha","cx","cy","extra","setExtraAttribsInBuffer","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","getRenderContext","getSimpleTc","getWhite","C2dCoreQuadOperation","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","globalCompositeOperation","beginPath","rect","closePath","fill","clearRect","_restoreContext","restore","save","_equalScissorAreas","clip","C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","tintTexture","getTintTexture","drawImage","gradient","transparency","createLinearGradient","addColorStop","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","_addMemoryUsage","delta","addMemoryUsage","_delete","_hasCache","_getCache","prevMemUsage","memoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","setRenderContext","setWhite","setSimpleTc","SparkShader","elementPostion","paint","SparkRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","_ref2","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_imageWorker","_registerVisibilityChangeHandler","clearInterval","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","startLoop","loop","stopLoop","switchLoop","setInterval","updateFrame","idleFrame","requestAnimationFrame","lp","renderFrame","view","pvr","mipmaps","DataView","compressedTexImage2D","glInternalFormat","pixelWidth","pixelHeight","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","arraybuffer","getUint32","littleEndian","glType","glTypeSize","glFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","kvps","includes","imageSize","pvrHeaderLength","arrayBuffer","header","Int32Array","dataOffset","pvrtcData","Uint8Array","byteOffset","cancelCb","isPng","isKtx","isPvr","request","addEventListener","handleKtxLoad","handlePvrLoad","Image","crossOrigin","removeAttribute","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","getHrTime","performance","now","changes","registerKeydownHandler","keyhandler","_keydownListener","registerKeyupHandler","_keyupListener","removeEventListener","registerClickHandler","clickHandler","_clickListener","registerHoverHandler","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","_getDefaultFlag","cap","DITHER","change","setProgram","program","va","equal","setActiveTexture","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","pname","param","_getPixelStoreiIndex","migrate","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","_initStateManager","switchState","$useProgram","fb","setBuffer","setFramebuffer","setRenderbuffer","$enable","setFlag","$disable","$viewport","$scissor","$disableVertexAttribArray","$enableVertexAttribArray","normalized","stride","$activeTexture","setPixelStorei","$stencilFuncSeparate","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","$stencilOpSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","$blendColor","red","green","blue","_blendColor","$blendEquation","_blendEquation","modeRGB","modeAlpha","_blendEquationSeparate","sfactor","dfactor","_blendFunc","$blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","$clearColor","_clearColor","$clearDepth","_clearDepth","$clearStencil","_clearStencil","$colorMask","_colorMask","$cullFace","_cullFace","$depthFunc","_depthFunc","$depthMask","flag","_depthMask","zNear","zFar","_depthRange","$frontFace","_frontFace","$lineWidth","_lineWidth","factor","units","_polygonOffset","invert","_sampleCoverage","$stencilFunc","_stencilFunc","$stencilMask","_stencilMask","$stencilOp","_stencilOp","indx","_vertexAttrib1f","_vertexAttrib1fv","$vertexAttrib2f","_vertexAttrib2f","_vertexAttrib2fv","$vertexAttrib3f","z","_vertexAttrib3f","_vertexAttrib3fv","_vertexAttrib4f","_vertexAttrib4fv","__proto__","method","WebGLStateManager$1","TextureManager","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","_updateVramUsage","sign","usage","Stage","isWebglSupported","addVramUsage","freeUnusedTextureSources","_cleanupLookupMap","remainingTextureSources","ts","_freeManagedTextureSource","managed","TextureThrottler","_remove","_sources","_data","processSome","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","zSort","debugFrame","_fillRenderState","_readPixels","_performRender","log","pixels","readPixels","prec","_createRenderTexture","freeUnusedRenderTextures","maxAge","limit","TransitionSettings","_timingFunction","TransitionManager","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","last","pe","idp","sm","pi","ni","nc","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","getValue","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","csx","csy","cex","cey","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getResetValue","getAnimatedElements","sv","hasColorProperty","selector","resetValue","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","aas","action","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","replay","STOPPED","stopNow","isPaused","isPlaying","isStopping","isFinished","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","stopTimingFunctionImpl","AnimationManager","RectangleTexture","_setOptions","_lastGcFrame","_usedVramAlpha","_usedVramNonAlpha","platformType","createWebGLContext","createCanvasContext","_mode","ratio","style","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","isWebgl","isC2d","opt","setApplication","app","resume","_updatingFrame","_calculateDt","fixedDt","nextFrame","drawFrame","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","addServiceProvider","serviceprovider","Application","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","_receiveKeydown","_receiveKeyup","_receiveClick","_receiveHover","_recieveScrollWheel","__options","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","_unfocus","focusedComponent","focusSettings","defaultSetFocusSettings","_setFocusSettings","defaultHandleFocusSettings","_handleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","newParts","focusTopDownEvent","events","focusPath","_path$i","returnValue","focusBottomUpEvent","_path$i2","keyCode","hasTimer","longpress","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","_child$core$_worldCon","localCoords","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","elem","_handleUnhover","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","cw","finalW","ch","finalH","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","factory","_ref$lookupId","Tools","canvasFactory","content","getRoundRect","radius","strokeWidth","strokeColor","fillColor","createRoundRect","getCanvasTexture","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","blur","margin","createShadowRect","getSvgTexture","url","createSvg","img","ObjMerger","isMf","__mf","mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","merge","ObjectListProxy","ObjectListWrapper","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","innerHTML","htmlElement","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","StaticTexture","ListComponent","_thisSuper","_reloadVisibleElements","_visibleItems","_index","_started","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","ListItems","_scrollTransition","setIndex","immediate","closest","nElements","realIndex","diff","viewportSize","scrollDelta","getAxisPosition","ps","wasVisible","invisibleItem","getWrapper","setPrevious","setNext","_super2","checkStarted","ri","LinearBlurShader","_direction","_kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","FastBlurComponent","_paddingX","_paddingY","_updateBlurSize","Wrap","WebGLFastBlurComponent","C2dFastBlurComponent","_textwrap","paddingX","paddingY","kernelRadius","_amountToKernelRadius","Textwrap","C2dBlurShader","Content","getSpline","_multiSpline","_super3","_layers","_output","_buildLayers","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_super4","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomComponent","BloomBase","BloomBaseShader","SmoothScaleComponent","_smoothScale","_iterations","its","_setIterations","scalers","first","useScalers","ContentWrap","Scale","contentWrap","BorderComponent","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","Borders","Top","Right","Bottom","Left","WebGLGrayscaleShader","_WebGLDefaultShader","_createClass","C2dGrayscaleShader","WebGLDefaultShader","_C2dDefaultShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","getWebGLImpl","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","num","_sc","renderPrecision","renderContext","FadeOutShader","_fade","fade","VignetteShader","_magnitude","_intensity","_pivot","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","_radiusY","innerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","PerspectiveShader","MagnifierShader","_magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","bool","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","components","tools","lng"],"mappings":"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mC,qBAAf,u/CCjDA,IAAMymC,GAAY,CACdhY,eACA36B,YACAl/C,OACAxD,MAAAA,EACArE,aACA0zC,UACA6zC,SACAlR,SACAjtD,cACAjC,oBACAmT,UACA/C,eACAoiE,QAAS,CACLC,UAAW1G,GACX2G,QAAS7L,GACT8L,UAAWrG,GACXsG,aAAclG,GACdmG,UAAWpF,GACXqF,WAAYrM,GACZsM,QAASrF,GACTsF,SAAU7E,GACV8E,aAAc1E,GACd2E,iBAAkBxE,GAClByE,SAAUrB,GACVsB,QAAS/D,GACTgE,KAAMnD,GACNoD,SAAU9D,GACV+D,QAAS3D,GACT4D,eAAgBrD,GAChBsD,QAAS/C,GACTgD,YAAa/B,GACbgC,UAAW/B,GACXzjC,cACAg+B,mBAAAA,EACA32B,aACA62B,iBAAAA,GACAxzB,IAAK,CACD45B,UAAWvG,GACX0H,KAAM/L,KAGd1tE,SAAU,CACNk+D,oBACAwK,gBACAr/C,cACA5M,eACAqsD,eACAmB,iBACArE,uBACAl5C,iBAEJgtD,WAAY,CACR7M,qBACA0C,kBACAG,wBACAW,mBACAnG,kBAEJyP,MAAO,CACHnS,aACAe,mBACAC,8BAIJzlF,EAAM6C,QACNC,OAAO+zF,IAAMxB"}