{"version":3,"file":"lightning.esm.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mts","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        if (item._reversed && item._recalc == 0) {\n            item._reversed = false;\n        }\n        if (!item._reversed) {\n            const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n            const reversedPos = this._layout.mainAxisSize - endPos;\n            item.flexItem._setMainAxisLayoutPos(reversedPos);\n            if (item._recalc != 0) {\n                item._reversed = true;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n        this._reversed = false;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        const flexParent = this._target._parent._layout;\n        this._flexItem.ctr = flexParent._flex;\n        flexParent.changedContents();\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n\n        /**\n         * Track whether or not there is an alpha channel in this source\n         * @type {boolean}\n         * @private\n         */\n         this._hasAlpha = false;\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        \n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px;\n        if (window.isRTL) {\n            px = this._x + (pivotXMul * this._localTa + pivotYMul * this._localTb) - pivotXMul;\n        } else {\n            px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        }\n\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                let calculatedX = this._localPx;\n                if (window.isRTL) {\n                    const parentW = this._element.__parent ? this._parent.w || 0 : this.ctx.stage.getOption('w');\n                    calculatedX = parentW - (this._w || 0) - this._localPx;\n                }\n\n                w.px = pw.px + calculatedX * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += calculatedX * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    let calculatedX = this._localPx;\n                    if (window.isRTL) {\n                      const parentW = this._element.__parent\n                        ? this._parent.w || 0\n                        : this.ctx.stage.getOption(\"w\");\n                      calculatedX = parentW - (this._w || 0) - this._localPx;\n                    }\n                    \n                    r.px = pr.px + calculatedX * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += calculatedX * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\n                    this.ctx.renderToTextureCount++;\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                a.splice(n); // Remove items that were sorted in b array, so that we can sort a\n+               // Beware that the function passed here to Array.sort must be stable\n+               a.sort(ElementCore.sortZIndexedChildren); // Needed because items with same _zIndex may not be ordered by _updateTreeOrder\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n\n                // free up unused TextTextures immediately as they are not reused anyway\n                if(this['text'] && !oldSource.isUsed()) {\n                    this.manager.freeTextureSource(oldSource);\n                }\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns CSS font setting string for use in canvas context.\n *\n * @param fontFace\n * @param fontStyle\n * @param fontSize\n * @param precision\n * @param defaultFontFace\n * @returns\n */\nexport function getFontSetting(\n    fontFace: string | string[],\n    fontStyle: string,\n    fontSize: number,\n    precision: number,\n    defaultFontFace: string\n): string {\n    let ff = fontFace;\n\n    if (!Array.isArray(ff)) {\n        ff = [ff];\n    }\n\n    let ffs = [];\n    for (let i = 0, n = ff.length; i < n; i++) {\n        let curFf = ff[i];\n        // Replace the default font face `null` with the actual default font face set\n        // on the stage.\n        if (curFf === null) {\n            curFf = defaultFontFace;\n        }\n        if (curFf === \"serif\" || curFf === \"sans-serif\") {\n            ffs.push(curFf);\n        } else {\n            ffs.push(`\"${curFf}\"`);\n        }\n    }\n\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\n}\n\n/**\n * Returns true if the given character is a zero-width space.\n *\n * @param space\n */\nexport function isZeroWidthSpace(space: string): boolean {\n    return space === '' || space === '\\u200B';\n}\n\n/**\n * Returns true if the given character is a zero-width space or a regular space.\n *\n * @param space\n */\nexport function isSpace(space: string): boolean {\n    return isZeroWidthSpace(space) || space === ' ';\n}\n\n/**\n * Converts a string into an array of tokens and the words between them.\n *\n * @param tokenRegex\n * @param text\n */\nexport function tokenizeString(tokenRegex: RegExp, text: string): string[] {\n    const delimeters = text.match(tokenRegex) || [];\n    const words = text.split(tokenRegex) || [];\n\n    let final: string[] = [];\n    for (let i = 0; i < words.length; i++) {\n        final.push(words[i]!, delimeters[i]!)\n    }\n    final.pop()\n    return final.filter((word) => word != '');\n}\n\n/**\n * Measure the width of a string accounting for letter spacing.\n *\n * @param context\n * @param word\n * @param space\n */\nexport function measureText(context: CanvasRenderingContext2D, word: string, space: number = 0): number {\n    if (!space) {\n        return context.measureText(word).width;\n    }\n    return word.split('').reduce((acc, char) => {\n        // Zero-width spaces should not include letter spacing.\n        // And since we know the width of a zero-width space is 0, we can skip\n        // measuring it.\n        if (isZeroWidthSpace(char)) {\n            return acc;\n        }\n        return acc + context.measureText(char).width + space;\n    }, 0);\n}\n\nexport interface WrapTextResult {\n    l: string[];\n    n: number[];\n}\n\n/**\n * Applies newlines to a string to have it optimally fit into the horizontal\n * bounds set by the Text object's wordWrapWidth property.\n *\n * @param context\n * @param text\n * @param wordWrapWidth\n * @param letterSpacing\n * @param indent\n */\nexport function wrapText(\n    context: CanvasRenderingContext2D,\n    text: string,\n    wordWrapWidth: number,\n    letterSpacing: number,\n    indent: number\n): WrapTextResult {\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\n    // than its horizontal bounds.\n    const spaceRegex = / |\\u200B/g;\n    let lines = text.split(/\\r?\\n/g);\n    let allLines: string[] = [];\n    let realNewlines: number[] = [];\n    for (let i = 0; i < lines.length; i++) {\n        let resultLines: string[] = [];\n        let result = '';\n        let spaceLeft = wordWrapWidth - indent;\n        let words = lines[i]!.split(spaceRegex);\n        let spaces = lines[i]!.match(spaceRegex) || [];\n        for (let j = 0; j < words.length; j++) {\n            const space = spaces[j - 1] || '';\n            const word = words[j]!;\n            const wordWidth = measureText(context, word, letterSpacing);\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                // Skip printing the newline if it's the first word of the line that is.\n                // greater than the word wrap width.\n                if (j > 0) {\n                    resultLines.push(result);\n                    result = '';\n                }\n                result += word;\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n            }\n            else {\n                spaceLeft -= wordWidthWithSpace;\n                result += space + word;\n            }\n        }\n\n        resultLines.push(result);\n        result = '';\n\n        allLines = allLines.concat(resultLines);\n\n        if (i < lines.length - 1) {\n            realNewlines.push(allLines.length);\n        }\n    }\n\n    return {l: allLines, n: realNewlines};\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, measureText, wrapText } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n            this._settings.fontWeight,\n        );\n        this._context.textBaseline = this._settings.textBaseline;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace'),\n                this._settings.fontWeight,\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || this._stage.getOption('w');\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth = 10;\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n        if (window.isRTL) {\n            this._context.direction = 'rtl';\n            this._context.textAlign = 'left';\n        }\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * See {@link wrapText}\n     *\n     * @param {string} text\n     * @param {number} wordWrapWidth\n     * @param {number} letterSpacing\n     * @param {number} indent\n     * @returns\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        return wrapText(this._context, text, wordWrapWidth, letterSpacing, indent);\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, isSpace, measureText, tokenizeString } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n            this._settings.fontWeight,\n        );\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace'),\n                this._settings.fontWeight,\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (isSpace(lastWord) || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\n            for (const s of suffix) {\n                s.lineNo = index;\n                s.x = 0;\n                lastLineText.push(s)\n            }\n\n            const spl = suffix.length + 1\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\n                lastLineText.splice(lastLineText.length - spl, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                if (lastLineText.length < spl) {\n                    break;\n                }\n            }\n            this.alignLine(lastLineText, lastLineText[0].x)\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n    tokenize(text) {\n        return tokenizeString(/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g, text);\n    }\n\n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n\n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n\n    alignLine(parsed, initialX = 0) {\n        let prevWidth = 0;\n        let prevX = initialX;\n        for (const word of parsed) {\n            if (word.text == '\\n') {\n                continue;\n            }\n            word.x = prevX + prevWidth;\n            prevX = word.x;\n            prevWidth = word.width;\n        }\n\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (this.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontWeight() {\n        return this._fontWeight;\n    }\n\n    set fontWeight(v) {\n        if (this._fontWeight !== v) {\n            this._fontWeight = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (v != 'center' && window.isRTL) {\n            v = v == \"right\" ? \"left\" : \"right\";\n        }\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontWeight !== 'normal') parts.push(\"fw\" + this.fontWeight);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = (args.advancedRenderer)\n              ? new TextTextureRendererAdvanced(this.stage, canvas, args)\n              : new TextTextureRenderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontWeight !== \"normal\") nonDefaults[\"fontWeight\"] = this.fontWeight;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontWeight = this._fontWeight;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontWeight = \"normal\";\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if( index < this._items.length){\n\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n\n                    const prevItem = this._items[index];\n\n                    // Doesn't exist yet: overwrite current.\n                    this._items[index] = item;\n\n                    if (item.ref) {\n                        this._refs[item.ref] = item;\n                    }\n\n                    this.onSet(item, index, prevItem);\n                } else {\n                    throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n                }\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.stage.removeUpdateSourceTexture(this.__displayedTexture)\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOffscreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n        this.ctx = null;\n        this.renderState = null;\n        this.gl = null;\n\n        delete this.ctx;\n        delete this.renderState;\n        delete this.gl;\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n\n        this.gl = null;\n        delete this.gl;\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n        this.gl = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n        }\n\n        this._attributeLocations = null;\n        this._currentUniformValues = null;\n        this.fragmentShaderSource = null;\n        this._program = null;\n        this.gl = null;\n        this._uniformLocations = null;\n        this.vertexShaderSource = null;  \n\n        delete this.vertexShaderSource;\n        delete this._program;        \n        delete this._currentUniformValues;\n        delete this.fragmentShaderSource;\n        delete this.gl;\n        delete this._uniformLocations;\n        delete this._attributeLocations;\n\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            \n            gl.bindTexture(gl.TEXTURE_2D, glTexture);\n            gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n        this._compressedTextureExtensions = {\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\n        }\n    }\n\n    getCompressedTextureExtensions() {\n        return this._compressedTextureExtensions\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n\n        this.shaderPrograms = null;\n        this._compressedTextureExtensions = null;\n\n        delete this.shaderPrograms;\n        delete this._compressedTextureExtensions;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n\n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n\n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    _getBytesPerPixel(fmt, type) {\n        const gl = this.stage.gl;\n\n        if (fmt === gl.RGBA) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 4;\n\n                case gl.UNSIGNED_SHORT_4_4_4_4:\n                    return 2;\n\n                case gl.UNSIGNED_SHORT_5_5_5_1:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGBA format');\n            }\n        }\n        else if (fmt === gl.RGB) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 3;\n\n                case gl.UNSIGNED_BYTE_5_6_5:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGB format');\n            }\n        }\n        else {\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\n        }\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n        let compressed = false;\n        if (options.renderInfo) {\n            compressed = options.renderInfo.compressed || false\n        }\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        if (compressed) {\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\n            return glTexture;\n        }\n         \n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n        \n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n        \n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        // calculate bytes per pixel for vram usage tracking\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc.colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n\n        this.tintManager = null;\n        delete this.tintManager;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n\n        this._items = null;\n        this._worker = null;\n\n        delete this._items;\n        delete this._worker;        \n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n\n        clearInterval(this._loopHandler);\n\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function () {\n            self._awaitingLoop = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.renderFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\n        gl.compressedTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            source.glInternalFormat,\n            source.pixelWidth,\n            source.pixelHeight,\n            0,\n            view,\n        )\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else if (source.width > 0 && source.height > 0) {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    /**\n     * KTX File format specification\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n     **/\n    handleKtxLoad(cb, src) {\n        var self = this;\n        return function () {\n            var arraybuffer = this.response;\n            var view = new DataView(arraybuffer);\n\n            // identifier, big endian\n            var targetIdentifier = 3632701469\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\n                cb('Parsing failed: identifier ktx mismatch:', src)\n            }\n\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\n            var data = {\n                glType: view.getUint32(16, littleEndian),\n                glTypeSize: view.getUint32(20, littleEndian),\n                glFormat: view.getUint32(24, littleEndian),\n                glInternalFormat: view.getUint32(28, littleEndian),\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\n                pixelWidth: view.getUint32(36, littleEndian),\n                pixelHeight: view.getUint32(40, littleEndian),\n                pixelDepth: view.getUint32(44, littleEndian),\n                numberOfArrayElements: view.getUint32(48, littleEndian),\n                numberOfFaces: view.getUint32(52, littleEndian),\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\n                kvps: [],\n                mipmaps: [],\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            const props = (obj) => {\n                const p = [];\n                for (let v in obj) {\n                    p.push(obj[v]);\n                }\n                return p;\n            }\n\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\n                .filter((obj) => obj != null)\n                .map((obj) => props(obj))\n                .reduce((prev, current) => prev.concat(current));\n\n            if (!formats.includes(data.glInternalFormat)) {\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\n            }\n\n            var offset = 64\n            // Key Value Pairs of data start at byte offset 64\n            // But the only known kvp is the API version, so skipping parsing.\n            offset += data.bytesOfKeyValueData;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                var imageSize = view.getUint32(offset);\n                offset += 4;\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\n                offset += imageSize\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    handlePvrLoad(cb, src) {\n        return function () {\n            // pvr header length in 32 bits\n            const pvrHeaderLength = 13;\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n            const pvrFormatEtc1 = 0x8D64;\n            const pvrWidth = 7;\n            const pvrHeight = 6;\n            const pvrMipmapCount = 11;\n            const pvrMetadata = 12;\n            const arrayBuffer = this.response;\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n            const dataOffset = header[pvrMetadata] + 52;\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n\n            var data = {\n                glInternalFormat: pvrFormatEtc1,\n                pixelWidth: header[pvrWidth],\n                pixelHeight: header[pvrHeight],\n                numberOfMipmapLevels: header[pvrMipmapCount],\n                mipmaps: [],\n                pvr: true,\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            let offset = 0\n            let width = data.pixelWidth;\n            let height = data.pixelHeight;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n                data.mipmaps.push(view);\n                offset += level;\n                width = width >> 1;\n                height = height >> 1;\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    loadSrcTexture({ src, hasAlpha }, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.toLowerCase().indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        let isKtx = src.indexOf('.ktx') >= 0 || src.indexOf('type=etc') >= 0;\n        let isPvr = src.indexOf('.pvr') >= 0;\n        if (isKtx || isPvr) {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\n            );\n            request.open(\"GET\", src);\n            request.responseType = \"arraybuffer\";\n            request.send();\n            cancelCb = function () {\n                request.abort();\n            }\n        } else if (this._imageWorker) {\n            // WPE-specific image parser.\n            const image = this._imageWorker.create(src);\n            image.onError = function (err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function () {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function (err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function () {\n                cb(null, {\n                    source: image,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function () {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts) || canvas.getContext('webgl2', opts);\n\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.renderFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\nimport Stage from './Stage.mjs';\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n\n        // add VRAM tracking if using the webgl renderer\n        this._updateVramUsage(textureSource, 1);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    _updateVramUsage(textureSource, sign) {\n        const nativeTexture = textureSource.nativeTexture;\n        var usage;\n\n        // do nothing if webgl isn't even supported\n        if (!Stage.isWebglSupported())\n            return;\n\n        // or if there is no native texture\n        if (!textureSource.isLoaded())\n            return;\n\n        // or, finally, if there is no bytes per pixel specified\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\n            return;\n\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\n\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\n    }\n\n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n        this._cleanupLookupMap();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n\n            // add VRAM tracking if using the webgl renderer\n            this._updateVramUsage(textureSource, -1);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n        this.stage = null;\n\n        delete this._sources;\n        delete this._data;\n        delete this.stage;\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n\n        this.renderToTextureCount = 0;\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n\n        this.stage = null;\n        this.root = null;\n\n        this.renderState = null;\n        this.renderExec = null;\n        this._renderTexturePool = null;\n        this._zSorts = null;\n\n        delete this.stage;\n        delete this.root;\n        delete this.renderState;\n        delete this.renderExec;\n        delete this._renderTexturePool;\n        delete this._zSorts;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        const debugFrame = this.stage.getOption('debugFrame');\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        if (debugFrame) {\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\n        }\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw') &&\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\n        ) {\n            if (debugFrame) {\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\n            }\n            this._readPixels();\n        }\n\n        this.renderToTextureCount = 0;\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements.\n         * @type {string}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        return element.select(this._selector);\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        // attempt to track VRAM usage more accurately by accounting for different color channels\n        this._usedVramAlpha = 0;\n        this._usedVramNonAlpha = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            if (this.getOption('devicePixelRatio') !== 1) {\n                const ratio = this.getOption('devicePixelRatio');\n                // set correct display sie\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\n            }\n\n            // set display buffer size\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('devicePixelRatio', 1)       \n        opt('readPixelsAfterDraw', false);\n        opt('readPixelsAfterDrawThreshold', 0);\n        opt('debugFrame', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n        opt('RTL', false);\n\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\n            this._options['precision'] *= o['devicePixelRatio']\n            this._options['w'] *= o['devicePixelRatio']\n            this._options['h'] *= o['devicePixelRatio']\n        }\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n\n        // clear last rendered frame\n        if (this.gl) {\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        } else if (this.c2d) {\n            this.c2d.clearRect(\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\n            );\n        }\n\n        this.gl = null;\n        this.c2d = null;\n        this.ctx = null;\n        this._options = null;\n        this.platform = null;\n        this.textureManager = null;\n        this._renderer = null;\n\n        delete this.gl;\n        delete this.c2d;\n        delete this.ctx;\n        delete this._options;\n        delete this.platform;\n        delete this.textureManager;\n        delete this._renderer;\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    renderFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    drawFrame() {\n        // Maintain original functionality of `drawFrame()` while retaining the\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\n        // The full functionality of this method is relied directly by our own unit tests and\n        // the unit tests of third party users\n        this.updateFrame();\n        this.renderFrame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    addVramUsage(delta, alpha) {\n        if (alpha) {\n            this._usedVramAlpha += delta;\n        }\n        else {\n            this._usedVramNonAlpha += delta;\n        }\n    }\n\n    get usedVramAlpha() {\n        return this._usedVramAlpha;\n    }\n\n    get usedVramNonAlpha() {\n        return this._usedVramNonAlpha;\n    }\n\n    get usedVram() {\n        return this._usedVramAlpha + this._usedVramNonAlpha;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y) {\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x, y, children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while (true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while (n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                const { px, py } = child.core._worldContext;\n                const cx = px * precision;\n                const cy = py * precision;\n\n                const localCoords = {\n                    x: clientX - cx,\n                    y: clientY - cy\n                }\n\n                const returnValue = child._handleClick(target, localCoords);\n                if (returnValue !== false) {\n                    break;\n                }\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a, b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1 : -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onerror = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[4];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b) * vColor;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n"],"names":["Utils","Layout","r","recalc","n","add","w","i","tag","descriptor","statePath","DefaultShader","TextureTintManager","texture","WebGLStateManager","curIndex","min","C2dBlurShader","WebGLDefaultShader","C2dDefaultShader"],"mappings":"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"}